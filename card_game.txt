<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Memory Game</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background-color: #f0f0f0;
            margin: 0;
        }
        .memory-game {
            width: 600px;
            height: 600px;
            display: flex;
            flex-wrap: wrap;
        }
        .card {
            width: calc(25% - 20px);
            height: calc(25% - 20px);
            margin: 10px;
            background-color: #ddd;
            border-radius: 8px;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 24px;
            cursor: pointer;
            transition: transform 0.3s ease;
        }
        .card.flipped {
            background-color: #fff;
        }
        .card.matched {
            background-color: #8bc34a; /* Green */
            cursor: default;
        }
    </style>
</head>
<body>
    <div class="memory-game" id="memoryGame"></div>

    <script>
        const cardsArray = ['A', 'A', 'B', 'B', 'C', 'C', 'D', 'D', 'E', 'E', 'F', 'F', 'G', 'G', 'H', 'H'];
        let flippedCards = [];
        let matchedCards = [];
        let moves = 0;
        let cardsFlipped = 0;

        function shuffle(array) {
            for (let i = array.length - 1; i > 0; i--) {
                const j = Math.floor(Math.random() * (i + 1));
                [array[i], array[j]] = [array[j], array[i]];
            }
            return array;
        }

        function createGameBoard() {
            const shuffledCards = shuffle(cardsArray);
            const memoryGame = document.getElementById('memoryGame');
            memoryGame.innerHTML = '';

            shuffledCards.forEach(card => {
                const div = document.createElement('div');
                div.classList.add('card');
                div.dataset.value = card;
                div.innerHTML = '<span class="hidden">?</span>';
                div.addEventListener('click', flipCard);
                memoryGame.appendChild(div);
            });
        }

        function flipCard() {
            if (flippedCards.length < 2 && !this.classList.contains('flipped') && !this.classList.contains('matched')) {
                this.classList.add('flipped');
                this.innerHTML = `<span>${this.dataset.value}</span>`;
                flippedCards.push(this);

                if (flippedCards.length === 2) {
                    setTimeout(checkMatch, 1000);
                }
            }
        }

        function checkMatch() {
            moves++;
            document.getElementById('moves').innerText = `Moves: ${moves}`;

            const [card1, card2] = flippedCards;
            if (card1.dataset.value === card2.dataset.value) {
                card1.classList.add('matched');
                card2.classList.add('matched');
                matchedCards.push(card1, card2);
                cardsFlipped += 2;
                if (cardsFlipped === cardsArray.length) {
                    setTimeout(() => alert(`Congratulations! You completed the game in ${moves} moves!`), 300);
                }
            } else {
                card1.classList.remove('flipped');
                card2.classList.remove('flipped');
                card1.innerHTML = '<span class="hidden">?</span>';
                card2.innerHTML = '<span class="hidden">?</span>';
            }

            flippedCards = [];
        }

        window.onload = function() {
            createGameBoard();
        };
    </script>
</body>
</html>